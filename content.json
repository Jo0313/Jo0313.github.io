{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2021/03/22/hello-world/"},{"title":"temp","text":"R 설치 R을 설치한다. URL: https://www.r-project.org/소스코드 작성 R 소스코드를 작성합니다. 1234a &lt;- 1b &lt;- 2c &lt;- a + bprint(c) 테스트 테스트","link":"/2021/03/22/temp/"},{"title":"c++","text":"#includeusing namespace std; int main(){ std &gt;&gt; “hello world”;}","link":"/2021/03/22/c/"},{"title":"Rbasic","text":"Data에는 질적 범주, 양적 범주가 있다 질적 범주 안에는 명목척도와 서열척도가 있음 ※ 명목척도(Nominal Scale): ㅁ 가장 낮은 수준의 척도로 단지 측정대상의 특성만 구분하기 위하여 숫자나 기호를 할당한 것으로 특성간의 양적인 분석을 할 수 없고, 때문에 특성간에 대소의 비료도 할 수 없다. ※ 서열척도(Ordinal Scale): ㅁ 측정대상의 특성들을 구분하여 줄뿐만 아니라 이들 사이의 상대적인 크기를 나타낼 수 있고, 서로 간에 비교가 가능한 척도 명목척도 닭고기 소고기 서열척도 닭고기 1등급 닭고기 2등급 연속형 discrete 사람과 관련된 데이터 고객 데이터 (crm) 아무리 분석을 해도 마케팅이 없으면 x 기계와 관련된 데이터 (무의미한 데이터가 많음) 제조공정과 관련된 데이터 ※ 0단계 : 패키지 설치 install.packages(“ggplot2”) ※ 1단계 : 패키지 불러오기 library(ggplot2) ※ 2단계 : Data 불러오기 data(“iris”) ※ 3 데이터확인 str(iris) ※ 4 가공되지 않은 데이터 가공하기 ( 시각화를 위해서) ※ 5 시각화 하기 ggplot(data=iris, mapping = aes(x = Petal.Length,y = Species)) + geom_point() ggplot(데이터, x축, y축) +그래프종류 + 옵션(예: 축의 범위, 그래프 제목, 그래프 색상, 그래프의 배경색)","link":"/2021/03/22/Rbasic/"},{"title":"R Markdown","text":"R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com. When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this: 1summary(cars) 1234567## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 Including PlotsYou can also embed plots, for example: Note that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.","link":"/2021/03/22/temp2/"},{"title":"study","text":"head (x)head는 데이터의 처음 6행의 값을 보여주는 함수입니다. dataframe을 입력하면 처음 6개의 행렬을, 데이터에 변수를 지정하여 입력하면 변수의 처음 6개의 값을 나타냅니다. head(diamonds) # 첫 행부터 6행까지의 값을 나타냄 A tibble: 6 x 10carat cut color clarity depth table price x y z 1 0.23 Ideal E SI2 61.5 55 326 3.95 3.98 2.432 0.21 Premium E SI1 59.8 61 326 3.89 3.84 2.313 0.23 Good E VS1 56.9 65 327 4.05 4.07 2.314 0.290 Premium I VS2 62.4 58 334 4.2 4.23 2.635 0.31 GoodJ SI2 63.3 58 335 4.34 4.35 2.756 0.24 Very Good J VVS2 62.8 57 336 3.94 3.96 2.48 head(diamonds$carat) # carat 열의 6행까지의 값을 나타냄[1] 0.23 0.21 0.23 0.29 0.31 0.24 tail (x)tail은 마지막 6행의 값을 나타냅니다. head와 마찬가지로 행렬과 변수의 개별 값을 알 수 있습니다. tail(diamonds) A tibble: 6 x 10carat cut color clarity depth table price x y z 1 0.72 Premium D SI1 62.7 59 2757 5.69 5.73 3.582 0.72 Ideal D SI1 60.8 57 2757 5.75 5.76 3.53 0.72 Good D SI1 63.1 55 2757 5.69 5.75 3.614 0.7 Very Good D SI1 62.8 60 2757 5.66 5.68 3.565 0.86 Premium H SI2 61 58 2757 6.15 6.12 3.746 0.75 Ideal D SI2 62.2 55 2757 5.83 5.87 3.64 tail(diamonds$carat)[1] 0.72 0.72 0.72 0.70 0.86 0.75 str (x)str함수에 변수를 지정하면 해당 변수의 속성과 길이, 그리고 미리보기 값을 제공합니다. str(diamonds) 차례대로 데이터 구조(data.frame),데이터의 길이(53940 obs),변수의 개수(of 10 variables),변수 명($carat, $cut, … $z), 변수의 속성(num, ord.factor…),변수 값 미리보기 제공Classes ‘tbl_df’, ‘tbl’ and ‘data.frame’: 53940 obs. of 10 variables:$ carat : num 0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 …$ cut : Ord.factor w/ 5 levels “Fair”&lt;”Good”&lt;..: 5 4 2 4 2 3 3 3 1 3 …$ color : Ord.factor w/ 7 levels “D”&lt;”E”&lt;”F”&lt;”G”&lt;..: 2 2 2 6 7 7 6 5 2 5 …$ clarity: Ord.factor w/ 8 levels “I1”&lt;”SI2”&lt;”SI1”&lt;..: 2 3 5 4 2 6 7 3 4 5 …$ depth : num 61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 …$ table : num 55 61 65 58 58 57 57 55 61 61 …$ price : int 326 326 327 334 335 336 336 337 337 338 …$ x : num 3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 …$ y : num 3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 …$ z : num 2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 … str(diamonds$carat) num [1:53940] 0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 …4. class (x)class는 데이터의 속성만 표시합니다.class(diamonds)[1] “tbl_df” “tbl” “data.frame” class(diamonds$carat)[1] “numeric”모든 변수의 속성을 알고 싶다면 sapply를 사용하면 됩니다.sapply는 모든 변수에 같은 시행을 적용하라는 명령을 내립니다.즉, sapply(diamonds,class)는 class함수를 diamonds의 변수 전체에 반복하라는 뜻입니다.sapply(diamonds,class)$carat[1] “numeric” $cut[1] “ordered” “factor” $color[1] “ordered” “factor” $clarity[1] “ordered” “factor” $depth[1] “numeric” $table[1] “numeric” $price[1] “integer” $x[1] “numeric” $y[1] “numeric” $z[1] “numeric”","link":"/2021/03/23/study/"},{"title":"시각화화","text":"setup, include1knitr::opts_chunk$set(echo = TRUE) 문제 1. 패키지 설치 방법 ggplot2와 dplyr 패키지 설치 방법을 기재하세요. 12library(ggplot2)library(dplyr) 문제 2. 질적 변수와 양적 변수의 차이에 대해 설명 하세요문제 3. 엑셀 데이터를 불러오세요.12counties &lt;- readxl::read_xlsx(&quot;counties.xslx&quot;, sheet = 1)glimpse(counties) 문제 4. private_work, unemployment를 활용하여 산점도를 작성하세요. 조건: region을 기준으로 그룹화를 진행합니다. 12ggplot(counties, aes(x = private_work, y = unemployment, colour = region)) + geom_point() 문제 5. dplyr 함수를 활용하여, 아래 데이터를 요약하세요. counties 데이터를 활용합니다. 변수 추출은 region, state, men, women 각 region, state 별 men, women 전체 인구수를 구합니다. 최종 데이터셋 저장 이름은 final_df로 명명합니다. 123456789counties %&gt;% select(region, state, county, men, women) %&gt;% group_by(region, state) %&gt;% summarize(total_men = sum(men), total_women = sum(women)) %&gt;% filter(region == &quot;North Central&quot;) %&gt;% arrange(desc(total_men)) -&gt; final_df glimpse(final_df) 문제 6. final_df를 기준으로 막대 그래프를 그립니다. x축: state 1개의 region만 선택 / 선택은 자유 색상 꾸미기 등은 자유입니다. 그래프 정렬도 안해도 됩니다. 12ggplot(final_df, aes(x = state, y = total_men)) + geom_col()","link":"/2021/03/23/20210323/"},{"title":"","text":"자율주행자동차 ADAS 실무 - 빅데이터 분석 수행평가 1차 h1 {font-size: 34px;} h1.title {font-size: 38px;} h2 {font-size: 30px;} h3 {font-size: 24px;} h4 {font-size: 18px;} h5 {font-size: 16px;} h6 {font-size: 12px;} code {color: inherit; background-color: rgba(0, 0, 0, 0.04);} pre:not([class]) { background-color: white } code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;} ul.task-list{list-style: none;} code{white-space: pre;} if (window.hljs) { hljs.configure({languages: []}); hljs.initHighlightingOnLoad(); if (document.readyState && document.readyState === \"complete\") { window.setTimeout(function() { hljs.initHighlighting(); }, 0); } } .main-container { max-width: 940px; margin-left: auto; margin-right: auto; } img { max-width:100%; } .tabbed-pane { padding-top: 12px; } .html-widget { margin-bottom: 20px; } button.code-folding-btn:focus { outline: none; } summary { display: list-item; } pre code { padding: 0; } .tabset-dropdown > .nav-tabs { display: inline-table; max-height: 500px; min-height: 44px; overflow-y: auto; border: 1px solid #ddd; border-radius: 4px; } .tabset-dropdown > .nav-tabs > li.active:before { content: \"\"; font-family: 'Glyphicons Halflings'; display: inline-block; padding: 10px; border-right: 1px solid #ddd; } .tabset-dropdown > .nav-tabs.nav-tabs-open > li.active:before { content: \"\"; border: none; } .tabset-dropdown > .nav-tabs.nav-tabs-open:before { content: \"\"; font-family: 'Glyphicons Halflings'; display: inline-block; padding: 10px; border-right: 1px solid #ddd; } .tabset-dropdown > .nav-tabs > li.active { display: block; } .tabset-dropdown > .nav-tabs > li > a, .tabset-dropdown > .nav-tabs > li > a:focus, .tabset-dropdown > .nav-tabs > li > a:hover { border: none; display: inline-block; border-radius: 4px; background-color: transparent; } .tabset-dropdown > .nav-tabs.nav-tabs-open > li { display: block; float: none; } .tabset-dropdown > .nav-tabs > li { display: none; } 자율주행자동차 ADAS 실무 - 빅데이터 분석 수행평가 1차 본인 이름 2021 3 23 문제 1. 패키지 설치 방법 ggplot2와 dplyr 패키지 설치 방법을 기재하세요. library(ggplot2) library(dplyr) ## ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ## ## filter, lag ## The following objects are masked from 'package:base': ## ## intersect, setdiff, setequal, union 문제 2. 질적 변수와 양적 변수의 차이에 대해 설명 하세요 문제 3. 엑셀 데이터를 불러오세요. counties &lt;- readxl::read_xlsx(&quot;counties.xslx&quot;, sheet = 1) glimpse(counties) ## Rows: 3,138 ## Columns: 40 ## $ census_id &lt;chr&gt; &quot;1001&quot;, &quot;1003&quot;, &quot;1005&quot;, &quot;1007&quot;, &quot;1009&quot;, &quot;1011&quot;, &quot;10~ ## $ state &lt;chr&gt; &quot;Alabama&quot;, &quot;Alabama&quot;, &quot;Alabama&quot;, &quot;Alabama&quot;, &quot;Alabam~ ## $ county &lt;chr&gt; &quot;Autauga&quot;, &quot;Baldwin&quot;, &quot;Barbour&quot;, &quot;Bibb&quot;, &quot;Blount&quot;, ~ ## $ region &lt;chr&gt; &quot;South&quot;, &quot;South&quot;, &quot;South&quot;, &quot;South&quot;, &quot;South&quot;, &quot;South~ ## $ metro &lt;chr&gt; &quot;Metro&quot;, &quot;Metro&quot;, &quot;Nonmetro&quot;, &quot;Metro&quot;, &quot;Metro&quot;, &quot;No~ ## $ population &lt;dbl&gt; 55221, 195121, 26932, 22604, 57710, 10678, 20354, 1~ ## $ men &lt;dbl&gt; 26745, 95314, 14497, 12073, 28512, 5660, 9502, 5627~ ## $ women &lt;dbl&gt; 28476, 99807, 12435, 10531, 29198, 5018, 10852, 603~ ## $ hispanic &lt;dbl&gt; 2.6, 4.5, 4.6, 2.2, 8.6, 4.4, 1.2, 3.5, 0.4, 1.5, 7~ ## $ white &lt;dbl&gt; 75.8, 83.1, 46.2, 74.5, 87.9, 22.2, 53.3, 73.0, 57.~ ## $ black &lt;dbl&gt; 18.5, 9.5, 46.7, 21.4, 1.5, 70.7, 43.8, 20.3, 40.3,~ ## $ native &lt;dbl&gt; 0.4, 0.6, 0.2, 0.4, 0.3, 1.2, 0.1, 0.2, 0.2, 0.6, 0~ ## $ asian &lt;dbl&gt; 1.0, 0.7, 0.4, 0.1, 0.1, 0.2, 0.4, 0.9, 0.8, 0.3, 0~ ## $ pacific &lt;dbl&gt; 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0~ ## $ citizens &lt;dbl&gt; 40725, 147695, 20714, 17495, 42345, 8057, 15581, 88~ ## $ income &lt;dbl&gt; 51281, 50254, 32964, 38678, 45813, 31938, 32229, 41~ ## $ income_err &lt;dbl&gt; 2391, 1263, 2973, 3995, 3141, 5884, 1793, 925, 2949~ ## $ income_per_cap &lt;dbl&gt; 24974, 27317, 16824, 18431, 20532, 17580, 18390, 21~ ## $ income_per_cap_err &lt;dbl&gt; 1080, 711, 798, 1618, 708, 2055, 714, 489, 1366, 15~ ## $ poverty &lt;dbl&gt; 12.9, 13.4, 26.7, 16.8, 16.7, 24.6, 25.4, 20.5, 21.~ ## $ child_poverty &lt;dbl&gt; 18.6, 19.2, 45.3, 27.9, 27.2, 38.4, 39.2, 31.6, 37.~ ## $ professional &lt;dbl&gt; 33.2, 33.1, 26.8, 21.5, 28.5, 18.8, 27.5, 27.3, 23.~ ## $ service &lt;dbl&gt; 17.0, 17.7, 16.1, 17.9, 14.1, 15.0, 16.6, 17.7, 14.~ ## $ office &lt;dbl&gt; 24.2, 27.1, 23.1, 17.8, 23.9, 19.7, 21.9, 24.2, 26.~ ## $ construction &lt;dbl&gt; 8.6, 10.8, 10.8, 19.0, 13.5, 20.1, 10.3, 10.5, 11.5~ ## $ production &lt;dbl&gt; 17.1, 11.2, 23.1, 23.7, 19.9, 26.4, 23.7, 20.4, 24.~ ## $ drive &lt;dbl&gt; 87.5, 84.7, 83.8, 83.2, 84.9, 74.9, 84.5, 85.3, 85.~ ## $ carpool &lt;dbl&gt; 8.8, 8.8, 10.9, 13.5, 11.2, 14.9, 12.4, 9.4, 11.9, ~ ## $ transit &lt;dbl&gt; 0.1, 0.1, 0.4, 0.5, 0.4, 0.7, 0.0, 0.2, 0.2, 0.2, 0~ ## $ walk &lt;dbl&gt; 0.5, 1.0, 1.8, 0.6, 0.9, 5.0, 0.8, 1.2, 0.3, 0.6, 1~ ## $ other_transp &lt;dbl&gt; 1.3, 1.4, 1.5, 1.5, 0.4, 1.7, 0.6, 1.2, 0.4, 0.7, 1~ ## $ work_at_home &lt;dbl&gt; 1.8, 3.9, 1.6, 0.7, 2.3, 2.8, 1.7, 2.7, 2.1, 2.5, 1~ ## $ mean_commute &lt;dbl&gt; 26.5, 26.4, 24.1, 28.8, 34.9, 27.5, 24.6, 24.1, 25.~ ## $ employed &lt;dbl&gt; 23986, 85953, 8597, 8294, 22189, 3865, 7813, 47401,~ ## $ private_work &lt;dbl&gt; 73.6, 81.5, 71.8, 76.8, 82.0, 79.5, 77.4, 74.1, 85.~ ## $ public_work &lt;dbl&gt; 20.9, 12.3, 20.8, 16.1, 13.5, 15.1, 16.2, 20.8, 12.~ ## $ self_employed &lt;dbl&gt; 5.5, 5.8, 7.3, 6.7, 4.2, 5.4, 6.2, 5.0, 2.8, 7.9, 4~ ## $ family_work &lt;dbl&gt; 0.0, 0.4, 0.1, 0.4, 0.4, 0.0, 0.2, 0.1, 0.0, 0.5, 0~ ## $ unemployment &lt;dbl&gt; 7.6, 7.5, 17.6, 8.3, 7.7, 18.0, 10.9, 12.3, 8.9, 7.~ ## $ land_area &lt;dbl&gt; 594.44, 1589.78, 884.88, 622.58, 644.78, 622.81, 77~ 문제 4. private_work, unemployment를 활용하여 산점도를 작성하세요. 조건: region을 기준으로 그룹화를 진행합니다. ggplot(counties, aes(x = private_work, y = unemployment, colour = region)) + geom_point() 문제 5. dplyr 함수를 활용하여, 아래 데이터를 요약하세요. counties 데이터를 활용합니다. 변수 추출은 region, state, men, women 각 region, state 별 men, women 전체 인구수를 구합니다. 최종 데이터셋 저장 이름은 final_df로 명명합니다. counties %&gt;% select(region, state, county, men, women) %&gt;% group_by(region, state) %&gt;% summarize(total_men = sum(men), total_women = sum(women)) %&gt;% filter(region == &quot;North Central&quot;) %&gt;% arrange(desc(total_men)) -&gt; final_df ## `summarise()` has grouped output by 'region'. You can override using the `.groups` argument. glimpse(final_df) ## Rows: 12 ## Columns: 4 ## Groups: region [1] ## $ region &lt;chr&gt; &quot;North Central&quot;, &quot;North Central&quot;, &quot;North Central&quot;, &quot;North ~ ## $ state &lt;chr&gt; &quot;Illinois&quot;, &quot;Ohio&quot;, &quot;Michigan&quot;, &quot;Indiana&quot;, &quot;Missouri&quot;, &quot;Wi~ ## $ total_men &lt;dbl&gt; 6316899, 5662893, 4861973, 3235263, 2964003, 2851385, 2692~ ## $ total_women &lt;dbl&gt; 6556862, 5913084, 5038598, 3333382, 3081445, 2890732, 2727~ 문제 6. final_df를 기준으로 막대 그래프를 그립니다. x축: state 1개의 region만 선택 / 선택은 자유 색상 꾸미기 등은 자유입니다. 그래프 정렬도 안해도 됩니다. ggplot(final_df, aes(x = state, y = total_men)) + geom_col() // add bootstrap table styles to pandoc tables function bootstrapStylePandocTables() { $('tr.odd').parent('tbody').parent('table').addClass('table table-condensed'); } $(document).ready(function () { bootstrapStylePandocTables(); }); $(document).ready(function () { window.buildTabsets(\"TOC\"); }); $(document).ready(function () { $('.tabset-dropdown > .nav-tabs > li').click(function () { $(this).parent().toggleClass('nav-tabs-open'); }); }); (function () { var script = document.createElement(\"script\"); script.type = \"text/javascript\"; script.src = \"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"; document.getElementsByTagName(\"head\")[0].appendChild(script); })();","link":"/2021/03/23/20210323/"}],"tags":[{"name":"c++","slug":"c","link":"/tags/c/"},{"name":"R","slug":"R","link":"/tags/R/"}],"categories":[]}